diff --git a/addressfield.info b/addressfield.info
index 5dd38d2..830db08 100644
--- a/addressfield.info
+++ b/addressfield.info
@@ -7,3 +7,4 @@ dependencies[] = ctools
 
 files[] = addressfield.migrate.inc
 files[] = views/addressfield_views_handler_filter_country.inc
+files[] = views/addressfield_views_handler_field_country.inc
diff --git a/views/addressfield.views.inc b/views/addressfield.views.inc
index 77a5b45..af24af1 100644
--- a/views/addressfield.views.inc
+++ b/views/addressfield.views.inc
@@ -22,5 +22,66 @@ function addressfield_field_views_data($field) {
     }
   }
 
+  // Only expose these components as Views' field handlers.
+  $implemented = array(
+    'country' => 'addressfield_views_handler_field_country',
+    'administrative_area' => 'views_handler_field',
+    'locality' => 'views_handler_field',
+    'name_line' => 'views_handler_field',
+    'first_name' => 'views_handler_field',
+    'last_name' => 'views_handler_field',
+    'organisation_name' => 'views_handler_field',
+    'postal_code' => 'views_handler_field',
+    'thoroughfare' => 'views_handler_field',
+    'premise' => 'views_handler_field',
+  );
+
+  // Get the translated field information.
+  $properties = addressfield_data_property_info();
+
+  // Iterate over addressfield defined tables.
+  foreach ($data as &$table) {
+    // Make sure the parent Views' field (addressfield) is defined.
+    if (isset($table[$field['field_name']]['field'])) {
+
+      // Use the parent field definition as a template for component columns.
+      $field_def = $table[$field['field_name']]['field'];
+
+      // Remove 'additional fields' from the field definition. We don't
+      // necessarily want all our sibling columns.
+      unset($field_def['additional fields']);
+
+      // Define the valid columns.
+      $valid_columns = array();
+      foreach ($implemented as $implement => $handler) {
+        $column_name = $field['field_name'] . '_' . $implement;
+        $valid_columns[$column_name] = $handler;
+      }
+
+      // Iterate over the addressfield components.
+      foreach ($table as $column_name => &$column) {
+        if (empty($column['field']) && isset($valid_columns[$column_name])) {
+          // Assign the default component definition.
+          $column['field'] = $field_def;
+          $column['field']['real field'] = $column_name;
+          $column['field']['handler'] = $valid_columns[$column_name];
+          // Assign human-friendly field labels for addressfield components.
+          $field_labels = field_views_field_label($field['field_name']);
+          $field_label = array_shift($field_labels);
+          $property = str_replace($field_def['field_name'] . '_', '', $column_name);
+          if (!empty($properties[$property])) {
+            $property_label = $properties[$property]['label'];
+            $title = t('@field-label - @property-label', array(
+              '@field-label' => $field_label,
+              '@property-label' => $property_label,
+            ));
+            $column['title'] = $title;
+            $column['title short'] = $title;
+          }
+        }
+      }
+    }
+  }
+
   return $data;
 }
